name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version  # Docker Compose 버전 확인

    - name: Build Docker images locally
      run: |
        docker-compose -f docker-compose.yml build

  test:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:latest
        options: --privileged
        ports:
          - 3306:3306
          - 5000:5000
          - 6379:6379
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
        env:
          MYSQL_ROOT_PASSWORD: root1234
          MYSQL_DATABASE: AICC_DB_MAP

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version  # Docker Compose 버전 확인

    - name: Build and run services
      run: docker-compose up -d

    # - name: Run tests
    #   run: |
    #     docker exec aicc_server npm run test

  deploy:
    runs-on: ubuntu-latest
    # needs: test  # 주석 처리하여 의존성 제거

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version  # Docker Compose 버전 확인

    - name: SSH into EC2
      run: |
        echo "${{ secrets.SSH_PASSWORD }}" | sshpass ssh -o StrictHostKeyChecking=no -i ${{ secrets.AWS_EC2_KEY }} ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }} "\
        cd /path/to/project && \
        git pull && \
        docker-compose down && \
        docker-compose up -d"

