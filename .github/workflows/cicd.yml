name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Docker 허브 로그인을 제거
    # - name: Log in to Docker Hub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker images locally (optional)
      run: |
        docker-compose -f docker-compose.yml build

  test:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:latest
        options: --privileged
        ports:
          - 3306:3306
          - 5000:5000
          - 6379:6379
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
        env:
          MYSQL_ROOT_PASSWORD: root1234
          MYSQL_DATABASE: AICC_DB_MAP

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build and run services
      run: docker-compose up -d

    - name: Run tests
      run: |
        # 여기에 필요한 테스트 스크립트나 명령어를 추가하세요
        docker exec aicc_server npm run test

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to AWS EC2 server
      run: |
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.AWS_EC2_KEY }} ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }} "\
          cd /path/to/project && \
          git pull && \
          docker-compose down && \
          docker-compose up -d"
